#!/bin/bash

echo "‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó"
echo "‚ïë       üîß Configurador de .env - FutProBot üîß            ‚ïë"
echo "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù"
echo ""
echo "‚ö†Ô∏è  IMPORTANTE: Cole suas credenciais REAIS do Supabase"
echo ""
echo "üìã Passo 1: DATABASE_URL"
echo "   V√° em: Supabase ‚Üí Settings ‚Üí Database ‚Üí Connection String (URI)"
echo "   ‚ö†Ô∏è  SUBSTITUA [YOUR-PASSWORD] pela senha real!"
echo ""
read -p "Cole aqui (postgresql://...): " DATABASE_URL
echo ""
echo "üìã Passo 2: NEXT_PUBLIC_SUPABASE_URL"
echo "   V√° em: Supabase ‚Üí Settings ‚Üí API ‚Üí Project URL"
echo ""
read -p "Cole aqui (https://...supabase.co): " SUPABASE_URL
echo ""
echo "üìã Passo 3: NEXT_PUBLIC_SUPABASE_ANON_KEY"
echo "   V√° em: Supabase ‚Üí Settings ‚Üí API ‚Üí anon public"
echo ""
read -p "Cole aqui (eyJ...): " ANON_KEY
echo ""
echo "üîê Gerando JWT_SECRET..."
JWT_SECRET=$(openssl rand -base64 32)
echo "‚úÖ JWT_SECRET gerado!"
echo ""

cat > .env << ENVEOF
DATABASE_URL="${DATABASE_URL}"
NEXT_PUBLIC_SUPABASE_URL="${SUPABASE_URL}"
NEXT_PUBLIC_SUPABASE_ANON_KEY="${ANON_KEY}"
JWT_SECRET="${JWT_SECRET}"
API_FOOTBALL_KEY="74a6034a3a4aa3556afb41cc0f7f048a"
ENVEOF

echo "‚úÖ Arquivo .env criado com sucesso!"
echo ""
echo "üß™ Testando conex√£o..."
bunx prisma db pull --force 2>&1 | grep -q "error" && {
    echo "‚ùå Erro na conex√£o!"
    echo "‚ö†Ô∏è  Verifique se a DATABASE_URL est√° correta"
    echo "‚ö†Ô∏è  Especialmente a SENHA - n√£o pode ter [YOUR-PASSWORD]"
    exit 1
} || {
    echo "‚úÖ Conex√£o com banco de dados OK!"
    echo ""
    echo "üöÄ Pr√≥ximos passos:"
    echo "   1. bunx prisma migrate dev --name init"
    echo "   2. bun run db:seed"
    echo "   3. bun run dev"
}
